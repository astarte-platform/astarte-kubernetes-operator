---
astarte_k8s_namespace: "{{ vars | json_query('meta.namespace') | default('astarte') }}"
astarte_distribution_channel: "{{ distribution_channel|default('astarte') }}" # This defaults to the OSS public release on Docker Hub
astarte_tag: "{{ version|default('0.10.0-beta.3') }}"
astarte_image_pull_policy: "{{ image_pull_policy|default('IfNotPresent') }}"

# Resource prefix. Most useful for Operator.
astarte_resources_prefix: "{{ vars | json_query('meta.namespace') | default('astarte') }}"
resources_computed_prefix: "{{ '' if not astarte_resources_prefix else astarte_resources_prefix + '-' }}"

# Reasonable defaults for standard K8S deployments
rabbitmq_connection_host: "{{ resources_computed_prefix }}rabbitmq.{{ astarte_k8s_namespace }}.svc.cluster.local"
rabbitmq_connection_port: "5672"
rabbitmq_connection_username: "{{ vars | json_query('rabbitmq.connection.username') | default('astarte-admin') }}"
rabbitmq_connection_password: "{{ vars | json_query('rabbitmq.connection.password') | default(lookup('password', '/dev/null length=16 chars=ascii_letters')) }}"
rabbitmq_connection_k8s_credentials_secret_name: "{{ vars | json_query('rabbitmq.connection.secret.name') | default(resources_computed_prefix + 'rabbitmq-user-credentials') }}"
rabbitmq_connection_k8s_credentials_secret_username_key: "{{ vars | json_query('rabbitmq.connection.secret.username_key') | default('admin-username') }}"
rabbitmq_connection_k8s_credentials_secret_password_key: "{{ vars | json_query('rabbitmq.connection.secret.password_key') | default('admin-password') }}"

cassandra_nodes: "{{ resources_computed_prefix }}cassandra.{{ astarte_k8s_namespace }}.svc.cluster.local:9042"
cfssl_url: "http://{{ resources_computed_prefix }}cfssl.{{ astarte_k8s_namespace }}.svc.cluster.local"
# This weird conditional means: default to empty when running from the Operator, and to 'housekeeping.pub'
# when running as a standard playbook.
astarte_housekeeping_key_file: "{{ '' if vars | json_query('meta.name') else 'housekeeping.pub' }}"
astarte_housekeeping_key_secret: "{{ resources_computed_prefix }}housekeeping-jwt"

# Reasonable K8S Deployment Policies
k8s_storage_class_name: "{{ vars | json_query('storage_class_name') | default('') }}"
k8s_use_rbac: "{{ vars | json_query('rbac') | default(true) }}"

### Ingress deployment control
astarte_api_use_ssl: "{{ vars | json_query('api.ssl') | default(true) }}"
astarte_api_expose_housekeeping: true
astarte_api_enable_cors: false
astarte_api_host: "{{ vars | json_query('api.host') | default('') }}"
astarte_dashboard_use_ssl: "{{ vars | json_query('components.dashboard.ssl') | default(astarte_api_use_ssl) }}"
astarte_dashboard_use_dedicated_host: "{{ vars | json_query('components.dashboard.dedicated_host') | default(deploy_astarte_dashboard) }}"
astarte_dashboard_host: "{{ vars | json_query('components.dashboard.host') | default('') }}"
mqtt_broker_host: "{{ vars | json_query('vernemq.host') | default('') }}"
mqtt_broker_port: "{{ vars | json_query('vernemq.port') | default(8883) }}"
##### Voyager
deploy_voyager_broker_ingress: true
deploy_voyager_api_ingress: true
voyager_use_letsencrypt: true

### Control 3rd Party components deployment
deploy_vernemq_k8s: "{{ vars | json_query('vernemq.deploy') | default(true) }}"
deploy_rabbitmq_k8s: "{{ vars | json_query('rabbitmq.deploy') | default(true) }}"
deploy_cassandra_k8s: "{{ vars | json_query('cassandra.deploy') | default(true) }}"
deploy_cfssl_k8s: "{{ vars | json_query('cfssl.deploy') | default(true) }}"

### Control additional Astarte components deployment
deploy_astarte_trigger_engine: "{{ vars | json_query('components.trigger_engine.deploy') | default(true) }}"
deploy_astarte_dashboard: "{{ vars | json_query('components.dashboard.deploy') | default(true) }}"

### Data Updater Plant AMQP policies

### AppEngine API AMQP policies
astarte_appengine_api_rooms_amqp_client_host: "{{ rabbitmq_connection_host }}"
astarte_appengine_api_rooms_amqp_client_username_secret_name: "{{ rabbitmq_connection_k8s_credentials_secret_name }}"
astarte_appengine_api_rooms_amqp_client_username_secret_key: "{{ rabbitmq_connection_k8s_credentials_secret_username_key }}"
astarte_appengine_api_rooms_amqp_client_password_secret_name: "{{ rabbitmq_connection_k8s_credentials_secret_name }}"
astarte_appengine_api_rooms_amqp_client_password_secret_key: "{{ rabbitmq_connection_k8s_credentials_secret_password_key }}"

### Astarte Applications Resources and Replicas. You might want to override these.
## Global allocation. This is used to auto-weight resources.
astarte_k8s_resources_requests_cpu: "{{ vars | json_query('components.resources.requests.cpu') | default('2000m') }}"
astarte_k8s_resources_requests_memory: "{{ vars | json_query('components.resources.requests.memory') | default('4096M') }}"
astarte_k8s_resources_limits_cpu: "{{ vars | json_query('components.resources.limits.cpu') | default('4000m') }}"
astarte_k8s_resources_limits_memory: "{{ vars | json_query('components.resources.limits.memory') | default('8192M') }}"

## Derived variables. Don't touch!
astarte_k8s_resources_requests_cpu_millis: "{{ (astarte_k8s_resources_requests_cpu * 1000)|float if astarte_k8s_resources_requests_cpu is number else astarte_k8s_resources_requests_cpu|replace('m','')|float }}"
astarte_k8s_resources_requests_memory_megs: "{{ astarte_k8s_resources_requests_memory|replace('M','')|float if 'M' in astarte_k8s_resources_requests_memory else astarte_k8s_resources_requests_memory|replace('G','')|float * 1024.0 }}"
astarte_k8s_resources_limits_cpu_millis: "{{ (astarte_k8s_resources_limits_cpu * 1000)|float if astarte_k8s_resources_limits_cpu is number else astarte_k8s_resources_limits_cpu|replace('m','')|float }}"
astarte_k8s_resources_limits_memory_megs: "{{ astarte_k8s_resources_limits_memory|replace('M','')|float if 'M' in astarte_k8s_resources_limits_memory else astarte_k8s_resources_limits_memory|replace('G','')|float * 1024.0 }}"

## Housekeeping
astarte_housekeeping_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_housekeeping_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_housekeeping_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_housekeeping_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_housekeeping_k8s_replicas: 1
astarte_housekeeping_api_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_housekeeping_api_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_housekeeping_api_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_housekeeping_api_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_housekeeping_api_k8s_replicas: 1
## Realm Management
astarte_realm_management_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_realm_management_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_realm_management_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_realm_management_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_realm_management_k8s_replicas: 1
astarte_realm_management_api_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_realm_management_api_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_realm_management_api_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_realm_management_api_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_realm_management_api_k8s_replicas: 1
## Pairing
astarte_pairing_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_pairing_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_pairing_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_pairing_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_pairing_k8s_replicas: 1
astarte_pairing_api_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_pairing_api_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_pairing_api_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.07) | round(0, 'floor') | int | string + 'm' }}"
astarte_pairing_api_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.07) | round(0, 'floor') | int | string + 'M' }}"
astarte_pairing_api_k8s_replicas: 1
## Data Updater Plant
astarte_data_updater_plant_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.22) | round(0, 'floor') | int | string + 'm' }}"
astarte_data_updater_plant_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.22) | round(0, 'floor') | int | string + 'M' }}"
astarte_data_updater_plant_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.22) | round(0, 'floor') | int | string + 'm' }}"
astarte_data_updater_plant_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.22) | round(0, 'floor') | int | string + 'M' }}"
astarte_data_updater_plant_k8s_replicas: 1
## AppEngine API
astarte_appengine_api_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.22) | round(0, 'floor') | int | string + 'm' }}"
astarte_appengine_api_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.22) | round(0, 'floor') | int | string + 'M' }}"
astarte_appengine_api_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.22) | round(0, 'floor') | int | string + 'm' }}"
astarte_appengine_api_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.22) | round(0, 'floor') | int | string + 'M' }}"
astarte_appengine_api_k8s_replicas: 1
## Trigger Engine
astarte_trigger_engine_k8s_resources_requests_cpu: "{{ (astarte_k8s_resources_requests_cpu_millis|float * 0.14) | round(0, 'floor') | int | string + 'm' }}"
astarte_trigger_engine_k8s_resources_requests_memory: "{{ (astarte_k8s_resources_requests_memory_megs|float * 0.14) | round(0, 'floor') | int | string + 'M' }}"
astarte_trigger_engine_k8s_resources_limits_cpu: "{{ (astarte_k8s_resources_limits_cpu_millis|float * 0.14) | round(0, 'floor') | int | string + 'm' }}"
astarte_trigger_engine_k8s_resources_limits_memory: "{{ (astarte_k8s_resources_limits_memory_megs|float * 0.14) | round(0, 'floor') | int | string + 'M' }}"
astarte_trigger_engine_k8s_replicas: 1
