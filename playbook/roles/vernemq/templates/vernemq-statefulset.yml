apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vernemq
  namespace: {{ astarte_k8s_namespace }}
  labels:
    app: vernemq
spec:
  serviceName: vernemq
  replicas: {{ vernemq_k8s_replicas }}
  selector:
    matchLabels:
      app: vernemq
  template:
    metadata:
      labels:
        app: vernemq
    spec:
      # Give it some time.
      terminationGracePeriodSeconds: 30
{% if k8s_use_rbac %}
      # Service account
      serviceAccountName: vernemq
{% endif %}
{% if vernemq_k8s_enable_antiaffinity %}
      # Affinity - just don't run two instances on the same node. It doesn't make sense.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - vernemq
            topologyKey: kubernetes.io/hostname
{% endif %}
      containers:
      - name: vernemq
        image: {{ astarte_distribution_channel }}/vernemq:{{ astarte_tag }}
        imagePullPolicy: Always
        resources:
          requests:
            cpu: "{{ vernemq_k8s_resources_requests_cpu }}"
            memory: "{{ vernemq_k8s_resources_requests_memory }}"
          limits:
            cpu: "{{ vernemq_k8s_resources_limits_cpu }}"
            memory: "{{ vernemq_k8s_resources_limits_memory }}"
        ports:
          - containerPort: 8883
            name: mqtt-ssl
          - containerPort: 80
            name: acme-verify
          - containerPort: 1883
            name: mqtt
          - containerPort: 1885
            name: mqtt-reverse
          - containerPort: 44053
            name: vmq-msg-dist
          - containerPort: 4369
            name: epmd
          - containerPort: 8888
            name: prometheus
          - containerPort: 9100
          - containerPort: 9101
          - containerPort: 9102
          - containerPort: 9103
          - containerPort: 9104
          - containerPort: 9105
          - containerPort: 9106
          - containerPort: 9107
          - containerPort: 9108
          - containerPort: 9109
        env:
          - name: DOCKER_VERNEMQ_ASTARTE_VMQ_PLUGIN__AMQP__USERNAME
            valueFrom:
              secretKeyRef:
                name: rabbitmq-user-credentials
                key: admin-username
          - name: DOCKER_VERNEMQ_ASTARTE_VMQ_PLUGIN__AMQP__PASSWORD
            valueFrom:
              secretKeyRef:
                name: rabbitmq-user-credentials
                key: admin-password
          - name: DOCKER_VERNEMQ_ASTARTE_VMQ_PLUGIN__AMQP__HOST
            value: "{{ lookup('vars', 'rabbitmq.connection.host', default=rabbitmq_connection_host) }}"
          - name: DISCOVERY_KUBERNETES
            value: "1"
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8888
          # Start checking after 1 minute, every 20 seconds, fail after the 3rd attempt
          initialDelaySeconds: 60
          periodSeconds: 20
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8888
          # Assume it takes at least 60 seconds to start up
          initialDelaySeconds: 60
          periodSeconds: 5
        volumeMounts:
        - name: vernemq-data
          mountPath: /opt/vernemq/data
{% if vernemq_k8s_volume_definition %}
      volumes:
      - name: vernemq-data
        {{ vernemq_k8s_volume_definition | to_nice_yaml }}
{% endif %}
{% if not vernemq_k8s_volume_definition %}
  volumeClaimTemplates:
  - metadata:
      name: vernemq-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
{% if vernemq_k8s_storage_class_name %}
      storageClassName: "{{ vernemq_k8s_storage_class_name }}"
{% endif %}
      resources:
        requests:
          storage: {{ vernemq_k8s_volume_size }}
{% endif %}
