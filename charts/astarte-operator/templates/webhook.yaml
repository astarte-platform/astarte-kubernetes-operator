apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: astarte-kubernetes-operator
  name: '{{ .Release.Name }}-webhook-service'
  namespace: '{{ .Release.Namespace }}'
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: astarte-kubernetes-operator
    control-plane: controller-manager
  name: '{{ .Release.Name }}-controller-manager'
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        image: controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: certificate
    app.kubernetes.io/created-by: astarte-kubernetes-operator
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: certificate
    app.kubernetes.io/part-of: astarte-kubernetes-operator
  name: '{{ .Release.Name }}-serving-cert'
  namespace: '{{ .Release.Namespace }}'
spec:
  dnsNames:
  - '{{ .Release.Name }}-webhook-service.{{ .Release.Namespace }}.svc'
  - '{{ .Release.Name }}-webhook-service.{{ .Release.Namespace }}.svc.cluster.local'
  issuerRef:
    kind: Issuer
    name: '{{ .Release.Name }}-selfsigned-issuer'
  secretName: '{{ .Release.Name }}-webhook-service-webhook-server-cert'
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: astarte-kubernetes-operator
  name: '{{ .Release.Name }}-selfsigned-issuer'
  namespace: '{{ .Release.Namespace }}'
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ .Release.Name }}-serving-cert'
  name: '{{ .Release.Name }}-mutating-webhook-configuration'
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ .Release.Name }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-api-astarte-platform-org-v1alpha2-astarte
  failurePolicy: Fail
  name: mastarte.kb.io
  rules:
  - apiGroups:
    - api.astarte-platform.org
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - astartes
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ .Release.Name }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-api-astarte-platform-org-v1alpha2-flow
  failurePolicy: Fail
  name: mflow.kb.io
  rules:
  - apiGroups:
    - api.astarte-platform.org
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - flows
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ .Release.Name }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /mutate-ingress-astarte-platform-org-v1alpha1-astartedefaultingress
  failurePolicy: Fail
  name: mastartedefaultingress.kb.io
  rules:
  - apiGroups:
    - ingress.astarte-platform.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - astartedefaultingresses
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: '{{ .Release.Namespace }}/{{ .Release.Name }}-serving-cert'
  name: '{{ .Release.Name }}-validating-webhook-configuration'
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ .Release.Name }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-api-astarte-platform-org-v1alpha2-astarte
  failurePolicy: Fail
  name: vastarte.kb.io
  rules:
  - apiGroups:
    - api.astarte-platform.org
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - astartes
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ .Release.Name }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-api-astarte-platform-org-v1alpha2-flow
  failurePolicy: Fail
  name: vflow.kb.io
  rules:
  - apiGroups:
    - api.astarte-platform.org
    apiVersions:
    - v1alpha2
    operations:
    - CREATE
    - UPDATE
    resources:
    - flows
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: '{{ .Release.Name }}-webhook-service'
      namespace: '{{ .Release.Namespace }}'
      path: /validate-ingress-astarte-platform-org-v1alpha1-astartedefaultingress
  failurePolicy: Fail
  name: vastartedefaultingress.kb.io
  rules:
  - apiGroups:
    - ingress.astarte-platform.org
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - astartedefaultingresses
  sideEffects: None
