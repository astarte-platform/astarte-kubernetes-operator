#
# This file is part of Astarte.
#
# Copyright 2020 Ispirata Srl
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: "Helm Chart installation test"
on:
  pull_request:
  push:

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Fetch history
      run: git fetch --prune --unshallow
    - name: Setup Helm
      uses: azure/setup-helm@v1
      with:
        version: v3.4.2
    - name: Setup chart-testing
      uses: helm/chart-testing-action@v2.1.0
    - name: Set env variable for ct target branch
      run: echo "CT_TARGET_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
      if: ${{ github.event_name == 'push' }}
    - name: Set env variable for ct target branch
      run: echo "CT_TARGET_BRANCH=${GITHUB_BASE_REF#refs/heads/}" >> $GITHUB_ENV
      if: ${{ github.event_name == 'pull_request' }}
    - name: Set env variable to prevent chart bump errors
      run: echo "CT_CHECK_VERSION_INCREMENT=false" >> $GITHUB_ENV
    - name: Check ct env
      run: echo $CT_TARGET_BRANCH $CT_CHECK_VERSION_INCREMENT
    - name: Run chart-testing (lint)
      id: lint
      run: ct lint --target-branch $CT_TARGET_BRANCH
    - name: Run chart-testing (list-changed)
      id: list-changed
      run: |
        changed=$(ct list-changed)
        if [[ -n "$changed" ]]; then
          echo "::set-output name=changed::true"
        fi
    - name: Set nf_conntrack_max value
      # This step is required to avoid CrashLoopBackOff for kube-proxy
      # see https://github.com/kubernetes-sigs/kind/issues/2240#issuecomment-838510890
      run: |
        sudo sysctl net/netfilter/nf_conntrack_max=131072
    - uses: container-tools/kind-action@v1
      with:
        version: "v0.11.1"
        node_image: "kindest/node:v1.18.19@sha256:7af1492e19b3192a79f606e43c35fb741e520d195f96399284515f077b3b622c"
    - name: Build test image
      run: |
        docker build -t astarte-operator-ci:test -f Dockerfile .
    - name: Tag test image
      run: |
        docker tag astarte-operator-ci:test kind-registry:5000/astarte-operator-ci:test
    - name: Push test image to local registry
      run: |
        docker push kind-registry:5000/astarte-operator-ci:test
    - name: Ensure KinD is up
      run: |
        kubectl cluster-info
        kubectl get pods -n kube-system
    - name: Dump cluster info
      run: |
        kubectl cluster-info dump
    - name: Install cert-manager chart as dependency
      run: |
        kubectl create namespace cert-manager
        helm repo add jetstack https://charts.jetstack.io
        helm repo update
        helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v1.1.0 --set installCRDs=true
    - name: Sleep for 20 seconds (wait for cert-manager to come up)
      uses: jakejarvis/wait-action@master
      with:
        time: '20s'
    - name: Install Helm Chart
      run: |
        helm install astarte-operator ./charts/astarte-operator --set image.repository=kind-registry:5000/astarte-operator-ci --set image.tag=test
    - name: Sleep for 20 seconds (wait for Astarte Operator to come up)
      uses: jakejarvis/wait-action@master
      with:
        time: '20s'
    - name: Install Astarte Resource
      run: |
        kubectl create namespace astarte-test
        kubectl apply -f test/helm/astarte.yaml
    - name: Wait for Astarte to come up
      run: ./test/helm/wait-for-astarte.sh
    - name: Dump debug info
      if: failure()
      run: |
        kubectl get pods -n astarte-test
        kubectl get deployment -n astarte-test
        kubectl get statefulset -n astarte-test
        kubectl get secrets -n astarte-test
        kubectl get configmaps -n astarte-test
        kubectl get pvc -n astarte-test
        kubectl describe astarte -n astarte-test || echo "Astarte already deleted"
    - name: Show pod states
      run: |
        kubectl get pods -n astarte-test
